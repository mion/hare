// Generated by CoffeeScript 1.12.7
(function() {
  var Compiler, directJavaScript;

  Compiler = (function() {
    function Compiler() {}

    Compiler.prototype.compile = function(program) {
      var arglist, args, body, bodyStr, exps, op, rest;
      if (!_.isArray(program)) {
        return directJavaScript(program);
      } else if (_.first(program) === 'do') {
        exps = _.chain(program).drop(1).map(arguments.callee).value();
        body = _.dropRight(exps).concat("return " + (_.last(exps)) + ";");
        bodyStr = body.join(";\n");
        return "(function () { " + bodyStr + " })()";
      } else if (_.first(program) === 'get') {
        return program[1] + "[" + (arguments.callee(program[2])) + "]";
      } else if (_.first(program) === 'set') {
        return program[1] + "[" + (arguments.callee(program[2])) + "] = " + (arguments.callee(program[3]));
      } else if (_.first(program) === 'var') {
        return "var " + program[1] + " = " + (arguments.callee(program[2]));
      } else if (_.first(program) === 'if') {
        return "(" + (arguments.callee(program[1])) + ") ? (" + (arguments.callee(program[2])) + ") : (" + (arguments.callee(program[3])) + ")";
      } else if (program[0] === 'list') {
        return ["["] + _.map(program.slice(1), arguments.callee).join(", ") + ["]"];
      } else if (program[0] === 'func') {
        args = program[1].join(', ');
        rest = _.chain(program).drop(2).map(arguments.callee).value();
        return "function (" + args + ") { return " + rest + "; }";
      } else if (_.includes(['*', '+', '-', '%', '<', '>', '<=', '>=', '=', 'or', 'and'], program[0])) {
        op = '=' === program[0] ? '===' : 'or' === program[0] ? '||' : 'and' === program[0] ? '&&' : program[0];
        return "(" + (arguments.callee(program[1])) + ") " + op + " (" + (arguments.callee(program[2])) + ")";
      } else if (program[0] === 'not') {
        return "!(" + (arguments.callee(program[1])) + ")";
      } else {
        arglist = _.chain(program).tail().map(arguments.callee).value();
        return (directJavaScript(program[0])) + "(" + arglist + ")";
      }
    };

    return Compiler;

  })();

  directJavaScript = function(program) {
    var hareToJs, js, key, value;
    hareToJs = {
      'round': 'Math.round',
      'floor': 'Math.floor',
      'ceiling': 'Math.ceiling',
      '^': 'Math.pow',
      'Ë†': 'Math.pow',
      'sqrt': 'Math.sqrt',
      'max': 'Math.max',
      'min': 'Math.min',
      'cos': 'Math.cos',
      'sin': 'Math.sin',
      'tan': 'Math.tan',
      'acos': 'Math.acos',
      'asin': 'Math.asin',
      'atan': 'Math.atan',
      'log': 'Math.log',
      'log10': 'Math.log10',
      'E': 'Math.E',
      'PI': 'Math.PI',
      'random': 'Math.random'
    };
    for (key in _) {
      value = _[key];
      if (_.hasOwnProperty(key)) {
        hareToJs[key] = "_." + key;
      }
    }
    js = hareToJs[program];
    if (_.isUndefined(js)) {
      return program;
    } else {
      return js;
    }
  };

  module.exports = {
    Compiler: Compiler,
    compile: function(program) {
      var compiler;
      compiler = new Compiler();
      return compiler.compile(program);
    }
  };

}).call(this);

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=/Users/gvieira/code/hare/hare_framer/src_coffee/compiler.coffee